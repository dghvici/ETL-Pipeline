name: ETL-PIPELINE

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - 'main'

jobs:
  run-tests:
    name: run-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout and clone repo
        uses: actions/checkout@v4
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.7'
      - name: Create environment
        run: make requirements
      - name: Run security checks
        run: make run-security
      - name: Run formatter and tests
        run: make run-checks
  deploy-terraform:
    name: deploy-terraform
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: checkout and clone repo
        uses: actions/checkout@v4
      - name: setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.7'
      - name: Create environment
        run: make requirements
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.0.11
      - name: Terraform init
        working-directory: terraform
        run: terraform init
      - name: Terraform destroy (for cleanup)
        working-directory: terraform
        run: terraform destroy -auto-approve
        env:
          TF_VAR_rds_user: ${{ secrets.RDS_USER }}
          TF_VAR_rds_password: ${{ secrets.RDS_PASSWORD }}
          TF_VAR_port: ${{ secrets.PORT }}
          TF_VAR_rds_name: ${{ secrets.RDS_NAME }}
          TF_VAR_rds_host: ${{ secrets.RDS_HOST }}
      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan
        env:
          TF_VAR_rds_user: ${{ secrets.RDS_USER }}
          TF_VAR_rds_password: ${{ secrets.RDS_PASSWORD }}
          TF_VAR_port: ${{ secrets.PORT }}
          TF_VAR_rds_name: ${{ secrets.RDS_NAME }}
          TF_VAR_rds_host: ${{ secrets.RDS_HOST }}
      - name: Terraform Apply
        working-directory: terraform
        run: terraform apply -auto-approve
        env:
          TF_VAR_rds_user: ${{ secrets.RDS_USER }}
          TF_VAR_rds_password: ${{ secrets.RDS_PASSWORD }}
          TF_VAR_port: ${{ secrets.PORT }}
          TF_VAR_rds_name: ${{ secrets.RDS_NAME }}
          TF_VAR_rds_host: ${{ secrets.RDS_HOST }}